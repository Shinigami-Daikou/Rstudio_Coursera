x<-1:3
names(x)<-c('a','b')
x
swirl()
library(swirl)
swirl()
5+7
x<-5
+7
x<-5
++7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
help.start()
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-my_sqrt/
z
my_div<-my_sqrt/z
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x<-9
ls()
dir()
?list.files
args(list.files)
old.dir<-getwd
old.dir<-getwd()
dir.create
dir.create('testdir')
setwd('testdir')
file.create('mytest.R')
dir()
file.exists('mytest.R')
file.info('mytest.R')
file.rename('mytest.R','mytest2.R')
file.copy('mytest2.R','mytest3.R')
file.path('mytest3.R','Yes')
file.path('mytest3.R')
file.path('folder1','folder2')
paly()
play()
ls
ls()
dir()
nxt()
?dir.create
dir.create(file.path('testdir2/testdir3'),recursive = T)
dir.create(file.path('testdir2','testdir3'),recursive = T)
dir.create(file.path('testdir2','testdir3'),recursive = TRUE)
setwd(old.dir)
!:20p
1:20
pi:10
15:1
?`:`
seq(1:20)
seq(1,20)
seq(1,10,by=0.5)
seq(1,10, by=0.5)
seq(0,10, by=0.5)
seq(5,10, length=30)
my_seq<-seq(5,10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
?seq
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c('My','name','is')
my_char
paste(my_char,collapse = " ")
my_name<-c(my_char,"papi")
my_name
paste(my_name,coll)
paste(my_name,collapse = " ")
paste("Hello","world!",sep=" ")
paste("x","Y","z",sep="")
paste("X","Y","Z",sep="")
paste(1:3,"X","Y","Z",sep="")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="")
paste(LETTERS,1:4,sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
ny_data==NA
my_data==NA
sum(my_na)
my_data
?rnorm
0/0
Inf/Inf
Inf-Inf
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
nxt()
y
?
ds
help()
help.start()
info()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
?
?
?
olk'l'
olk'l'
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
olk'l'
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
olk'l'
skip()
skip()
skip()
skip()
skip()
skip()
?rnorm
?rbinom
a<-function(x){
x[x>10]
}
print(a)
a<-function(x){
x[x>10]
}
a(c(1,4,5,10,303,222,344))
airquality
a<-function(y){
means<-numeric(ncol(y))
for (i in 1:ncol(y)) {
means[i]<-mean(y[,i],na.rm = TRUE)
}
means
}
a(airquality)
?lm
search()
library(swirl)
search()
search()[2]
package:swirl()
package:swirl
ls()
ls(package:swirl)
swirl()
play()
search()
nxt<-function(){}
play()
nxt<-function(){print("got you")}
paly()
play()
ls()
nxt()
x <- 1:10
if(x > 5) {
x <- 0
}
q()
library(datasets)
data(mtcars)
mtcars
tapply(mtcars$cyl, index, function)
tapply(mtcars$cyl, mtcars$mpg, mean)
apply(mtcars,2,mean)
sapply(mtcars,cyl,mean)
mean(mtcars$cyl, mtcars$mpg)
sapply((mtcars$cyl, mtcars$mpg), mean)
sapply(split(mtcars$cyl, mtcars$mpg), mean)
library(swirl)
swirl()
T==T
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=110
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
telegram('MA CHUDA')
submit
submit()
mad_libs(place=" ",adjective=" ",noun=" ")
submit
submit()
submit()
'I'%p%'love'%p%'R!'
d1<-Sys.Date()
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
t2<-as.POSIXlt(Sys.time())
unclass(t2)
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
q
Q
Q()
Q
q
q
q()
library(swirl)
swirl()
flags
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
length(unique_vals)
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(list, function, FUN.VALUE = type, ...)
vapply(flags,unique,numeric[1])
ok()
sapply(flags,class)
vapply(flags,class,character[1])
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
setwd("~/R/Coursera/Rstudio_Coursera/rprog_data_ProgAssignment3-data")
source('best.R')
best('AZ','Heart Failure')
source('best.R')
best('AZ','Heart Failure')
source('best.R')
best('AZ','Heart Failure')
source('best.R')
best('AZ','Heart Failure')
source('best.R')
source('best.R')
best('AZ','Heart Failure')
source('best.R')
best('AZ','Heart Failure')
source('best.R')
best('AZ','Heart Failure')
source('best.R')
best('AZ','Heart Failure')
source('best.R')
best('AZ','Heart Failure')
source('best.R')
best('AZ','Heart Failure')
source('best.R')
best('AZ','Heart Failure')
best('Ai','Heart Failure')
best('AI','Heart Failure')
best('CA','Heart Failure')
source('best.R')
best('CA','Heart Failure')
source('best.R')
best('CA','Heart Failure')
source('rankhospital.R')
source('rankhospital.R')
source('rankhospital.R')
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
?order
order(10,11,7)
order(c(10,11,7))
order(c(10.0,11.8,7.5))
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankhospital.R')
rankhospital('CA','Heart Failure',3)
source('rankall.R')
rankall('Heart Failure')
source('rankhospital.R')
source('rankall.R')
rankall('Heart Failure')
source('rankall2.R')
rankall2('Heart Failure')
source('rankall2.R')
rankall2('Heart Failure')
source('rankall2.R')
rankall2('Heart Failure')
source('rankall2.R')
rankall2('Heart Failure')
source('rankall2.R')
rankall2('Heart Failure')
source('rankall2.R')
rankall2('Heart Failure')
source('rankall2.R')
rankall2('Heart Failure')
t
source('rankall2.R')
rankall2('Heart Failure')
source('best.R')
best("SC", "heart attack")
best("SC", "Heart Attack")
best("NY", "Pneumonia")
source('best.R')
best("NY", "Pneumonia")
source('best.R')
best("NY", "Pneumonia")
source('best.R')
best("NY", "Pneumonia")
source('best.R')
best("SC", "Heart Attack")
best("NY", "Pneumonia")
best("AK", "Pneumonia")
rankhospital("NC", "Heart Attack", "worst")
rankhospital("WA", "Heart Attack", 7)
rankhospital("TX", "Pneumonia", 10)
rankhospital("NY", "Heart Attack", 7)
r <- rankall("Heart Attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("Pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("Heart Failure", 10)
as.character(subset(r, state == "NV")$hospital)
setwd("~/R/Coursera/Rstudio_Coursera/ProgrammingAssignment2")
source('cachematrix.R')
makeCacheMatrix(matrix(c(1:25),ncol = 5,nrow = 5))
source('cachematrix.R')
makeCacheMatrix(matrix(c(1:25),ncol = 5,nrow = 5))
cacheSolve(matrix(c(1:25),ncol = 5,nrow = 5))
a<-makeCacheMatrix(matrix(c(1:25),ncol = 5,nrow = 5))
cacheSolve(a)
a<-makeCacheMatrix(matrix(c(1:4),ncol = 2,nrow = 2))
cacheSolve(a)
